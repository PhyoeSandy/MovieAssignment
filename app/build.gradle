apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'me.moallemi.advanced-build-version'

advancedVersioning {

    nameOptions {
        versionMajor 0
        versionMinor 0
        versionPatch 1
    }

    codeOptions {
        versionCodeType 'AUTO_INCREMENT_ONE_STEP'
    }
    outputOptions {
        renameOutput true
        nameFormat '${appName}-v${versionName}'
    }
}

def appVersionName = advancedVersioning.versionName
def appVersionCode = advancedVersioning.versionCode

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.padcmyanmar.padcx.movieassignment"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode appVersionCode
        versionName appVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String','PARAM_API_VALUE',"\"${sensitiveAPIData}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        flavorDimensions "appModule"
        def BASE_URL_FIELD = "BASE_URL_FIELD"
        def BASE_DEV_URL = "\"https://dev.padcmyanmar.com/\""
        def BASE_PROD_URL = "\"https://padcmyanmar.com/\""
        def BASE_STAGING_URL = "\"https://staging.padcmyanmar.com/\""

        dev {
            dimension = "appModule"
            applicationIdSuffix = ".dev"
            manifestPlaceholders = [appName: "@string/app_name_dev"]
            buildConfigField 'String', BASE_URL_FIELD , BASE_DEV_URL
        }

        production {
            dimension = "appModule"
            applicationIdSuffix = ".prod"
            manifestPlaceholders = [appName: "@string/app_name_prod"]
            buildConfigField 'String', BASE_URL_FIELD , BASE_PROD_URL
        }

        staging {
            dimension = "appModule"
            applicationIdSuffix = ".staging"
            manifestPlaceholders = [appName: "@string/app_name_staging"]
            buildConfigField 'String', BASE_URL_FIELD, BASE_STAGING_URL
        }
    }
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'

    implementation rootProject.ext.libraries.material

    implementation rootProject.ext.libraries.liveData

    // lifecycle components
    implementation rootProject.ext.libraries.lifeCycle
    kapt rootProject.ext.libraries.lifeCycleCompiler

    // Annotation processor
    kapt rootProject.ext.libraries.annotationProcessor

    //Retrofit
    implementation rootProject.ext.libraries.retrofit
    implementation rootProject.ext.libraries.retrofitConverter
    implementation rootProject.ext.libraries.retrofitRxJava

    // Room
    implementation rootProject.ext.libraries.room
    kapt rootProject.ext.libraries.roomCompiler


    // Glide
    implementation rootProject.ext.libraries.glide

    //RxKotlin
    implementation rootProject.ext.libraries.rxKotlin
    implementation rootProject.ext.libraries.rxAndroid

    // Image Slider
    implementation rootProject.ext.libraries.imageSlider

    testImplementation rootProject.ext.libraries.Junit
    testImplementation rootProject.ext.libraries.Ktx
    testImplementation rootProject.ext.libraries.JunitKtx

    // Local Unit Tests
    testImplementation rootProject.ext.libraries.JunitKtx
    testImplementation rootProject.ext.libraries.lutMockk
    testImplementation rootProject.ext.libraries.lutMockito
    testImplementation rootProject.ext.libraries.lutRobolectric

    // Tests that require Android Device
    androidTestImplementation rootProject.ext.libraries.adtEspresso
    androidTestImplementation rootProject.ext.libraries.adtTestRule
    androidTestImplementation rootProject.ext.libraries.adtTestRunner
    androidTestImplementation rootProject.ext.libraries.adtExpressoContrib
    androidTestImplementation rootProject.ext.libraries.adtMockitoAndroid
    androidTestImplementation rootProject.ext.libraries.adtJunit


    implementation project(":shared")

}